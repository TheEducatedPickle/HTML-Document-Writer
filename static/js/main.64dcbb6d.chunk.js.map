{"version":3,"sources":["components/Input/InputComponent/InputTextField.js","components/Input/InputComponent/InputDeleteButton.js","components/Input/InputComponent/InputTypeSelector.js","components/Input/InputComponent/InputExtrasButton.js","components/Input/InputComponent/InputAddButton.js","components/Input/InputComponent/MoreElementDialog.js","components/Input/InputComponent/InputElement.js","components/experimental/FloatingAddButton.js","components/Input/InputList.js","util/InputTreeToHTML.js","components/Output/TextToHTML.js","components/Output/Output.js","components/MenuBar.js","models/HTMLElement.js","components/App.js","components/AppPreloader.js","index.js"],"names":["InputTextField","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","name","event","setState","defineProperty","target","value","state","multiline","_this2","classes","react_default","a","createElement","TextField_default","id","label","text","className","textField","margin","onChange","e","React","Component","withStyles","theme","marginLeft","spacing","unit","marginRight","width","dense","marginTop","menu","icon","IconButton_default","aria-label","onClick","Delete_default","fontSize","InputTypeSelector","type","InputLabel_default","style","Select_default","options","map","index","MenuItem_default","key","selectInput","padding","MoreVert_default","onAdd","Add_default","FormDialog","open","handleSetAttributes","bind","assertThisInitialized","newProps","onSetAttributes","toggleDialog","Dialog_default","onClose","aria-labelledby","maxWidth","fullWidth","DialogTitle_default","DialogContent_default","DialogContentText_default","autoFocus","DialogActions_default","Button_default","color","InputElement","handleAdd","element","getDepth","parent","handleDelete","onDelete","getParent","handleSetType","onTypeSelect","attr","dialogOpen","handleTextChange","prevState","console","log","ListItem_default","paddingLeft","disableGutters","InputComponent_InputTypeSelector","getType","InputComponent_InputTextField","getContent","InputComponent_InputAddButton","InputComponent_InputDeleteButton","InputComponent_InputExtrasButton","MoreElementDialog_FormDialog","getAttributes","fab","position","right","bottom","extendedIcon","Fab_default","uniqid","require","InputList","handleAddElement","depth","childData","handleRemoveElement","handleChangeElement","elementArray","root","List_default","component","list","maxHeight","overflow","renderTree","FloatingAddButton","currentElements","InputComponent_InputElement","getChildren","backgroundColor","paddingBottom","marginBottom","noText","InputTreeToHTML","length","output","content","includes","formatInputString","split","join","renderWithoutChildrenMultiline","formatTabbing","getOpeningTag","getClosingTag","renderWithoutChildren","toString","renderWithChildren","substr","i","string","amount","arguments","undefined","addTab","repeat","TextToOutput","userInput","background","Output","document","innerHTML","body","insertBefore","index_es","header","hr","code","TextToHTML","paddingTop","lineHeight","tabSize","flexGrow","grow","menubar","AppBar_default","Typography_default","variant","HTMLElement","children","Array","attributes","push","splice","App","addChild","forceUpdate","concat","removeChild","slice","getChild","setContent","stateCopy","assign","setType","setAttributes","components_MenuBar","components_Output_Output","input","Input_InputList","container","height","left","createMuiTheme","palette","primary","blue","secondary","typography","useNextVariants","Palette","styles","components_App","ReactDOM","render","AppPreloader","getElementById"],"mappings":"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","file":"static/js/main.64dcbb6d.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = theme => ({\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: 500,\r\n  },\r\n  dense: {\r\n    marginTop: 19,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n});\r\n\r\nclass InputTextField extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      multiline: 'Controlled',\r\n    };\r\n  }\r\n\r\n  handleChange = name => event => {\r\n    this.setState({\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <TextField\r\n        id=\"standard-textarea\"\r\n        label=\"text\"\r\n        value={this.props.text}\r\n        multiline\r\n        className={classes.textField}\r\n        margin=\"normal\"\r\n        onChange={(e) => this.props.onChange(e)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nInputTextField.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(InputTextField);\r\n","//InputDeleteButton is the delete button displayed in inputElement\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n        \r\n    },\r\n});\r\n\r\nfunction InputDeleteButton(props) {\r\n    const { classes } = props;\r\n    return (\r\n        <div>\r\n            <IconButton aria-label=\"Delete\" className={classes.icon} onClick={props.onClick}>\r\n                <DeleteIcon fontSize=\"default\" />\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nInputDeleteButton.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(InputDeleteButton);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst styles = theme => ({\r\n    selectInput: {\r\n        width: 30,\r\n        padding: 10,\r\n    }\r\n});\r\n\r\nclass InputTypeSelector extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            type: this.props.type,\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.props.onChange(event.target.value);\r\n      };\r\n\r\n    render() {\r\n        return (\r\n            <form className='selectInput'>\r\n                <InputLabel style={{fontSize: 12}}>{this.props.label}</InputLabel>\r\n                <Select\r\n                    value={this.props.type}\r\n                    onChange={this.handleChange}\r\n                >\r\n                    {this.props.options.map((text, index) => (\r\n                        <MenuItem key={index} value={this.props.options[index].value}>\r\n                            {this.props.options[index].label}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nInputTypeSelector.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(InputTypeSelector);\r\n","//InputDeleteButton is the delete button displayed in inputElement\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n        \r\n    },\r\n});\r\n\r\nfunction InputExtrasButton(props) {\r\n    const { classes } = props;\r\n    return (\r\n        <div>\r\n            <IconButton aria-label=\"More\" className={classes.icon} onClick={props.onClick}>\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nInputExtrasButton.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(InputExtrasButton);\r\n","//InputDeleteButton is the delete button displayed in inputElement\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst styles = theme => ({\r\n    icon: {\r\n        \r\n    },\r\n});\r\n\r\nfunction InputAddButton(props) {\r\n    const { classes } = props;\r\n    return (\r\n        <div>\r\n            <IconButton aria-label=\"Add\" className={classes.icon} onClick={props.onAdd}>\r\n                <AddIcon fontSize=\"default\" />\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nInputAddButton.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(InputAddButton);\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default class FormDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      text: this.props.text\r\n    };\r\n    this.handleSetAttributes = this.handleSetAttributes.bind(this)\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    this.setState({\r\n      open: newProps.open,\r\n      text: newProps.text,\r\n    });\r\n  }\r\n\r\n  handleSetAttributes() {\r\n    this.props.onSetAttributes(this.state.text);\r\n    this.props.toggleDialog();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.props.toggleDialog}\r\n          aria-labelledby=\"form-dialog-title\"\r\n          maxWidth= 'md'\r\n          fullWidth\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Add Attributes</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Set attributes for your <b>{this.props.type}</b> tag here <br />\r\n              <i style={{fontSize:13}}>Example: id=\"image1\" src=\"images/kitten.jpg\"</i>\r\n            </DialogContentText>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Attributes\"\r\n              type=\"text\"\r\n              fullWidth\r\n              value={this.state.text}\r\n              onChange={(e) => this.setState({text: e.target.value})}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.props.toggleDialog} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleSetAttributes} color=\"primary\">\r\n              Confirm\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}","/*\r\nInput element contains a single list item that takes user input via a text field.\r\nIt passes input data to InputList.js to be processed before passing to App.js\r\n*/\r\n\r\nimport React from 'react';\r\nimport InputField from './InputTextField';\r\nimport InputDeleteButton from './InputDeleteButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport InputTypeSelector from './InputTypeSelector';\r\nimport InputExtrasButton from './InputExtrasButton';\r\nimport InputAddButton from './InputAddButton';\r\nimport MoreElementDialog from './MoreElementDialog'\r\n\r\nclass InputElement extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dialogOpen: false,\r\n            index: this.props.index,\r\n        }\r\n        this.handleTextChange = this.handleTextChange.bind(this);\r\n        this.toggleDialog = this.toggleDialog.bind(this);\r\n    }\r\n\r\n    handleAdd = () => {\r\n        this.props.onAdd(this.props.element.getDepth()+1, {parent: this.props.element})\r\n    }\r\n    handleTextChange(e) {\r\n        this.props.onChange(e, this.state.index, {parent: this.props.element.getParent()});\r\n    }\r\n    handleDelete = () => {\r\n        this.props.onDelete(this.state.index, {parent: this.props.element.getParent()});\r\n    }\r\n    handleSetType = (value) => {\r\n        this.props.onTypeSelect(value, this.state.index, {parent: this.props.element.getParent()});\r\n    }\r\n    handleSetAttributes = (attr) => {\r\n        this.props.onSetAttributes(attr, this.state.index, {parent: this.props.element.getParent()});\r\n    }\r\n    toggleDialog() {\r\n        this.setState(prevState => ({\r\n            dialogOpen: !prevState.dialogOpen,\r\n        }))\r\n        console.log(this.state.dialogOpen)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ListItem style={{padding: 2, paddingLeft: (this.props.element.getDepth() - 1) * 25 }} disableGutters>\r\n                <InputTypeSelector \r\n                    type={this.props.element.getType()} \r\n                    onChange={this.handleSetType}\r\n                    label={'Block Type'}\r\n                    options={[\r\n                    {label: 'Header (1)', value: 'h1',},\r\n                    {label: 'Header (2)', value: 'h2',},\r\n                    {label: 'Header (3)', value: 'h3',},\r\n                    {label: 'Paragraph', value: 'p',},\r\n                    {label: 'Emphasis', value: 'em',},\r\n                    {label: 'Strong', value: 'strong',},  \r\n                    {label: 'Quotation', value: 'q',},      \r\n                    {label: 'Div', value: 'div',},  \r\n                    {label: 'Pre', value: 'pre',},\r\n                    {label: 'Unordered List', value: 'ul'},\r\n                    {label: 'Ordered List', value: 'ol'},\r\n                    {label: 'List Element', value: 'li'},\r\n                    {label: 'Table', value: 'table'},\r\n                    {label: 'Table Row', value: 'tr'},\r\n                    {label: 'Table Head', value: 'th'},\r\n                    {label: 'Table Data', value: 'td'},\r\n                    {label: 'Form', value: 'form'},\r\n                    {label: 'Input', value: 'input'},\r\n                    {label: 'Text Area', value: 'textarea'},\r\n                    {label: 'Select', value: 'select'},\r\n                    {label: 'Option', value: 'option'},\r\n                    {label: 'Button', value: 'button'},\r\n                    {label: 'Attribute', value: 'a',},\r\n                    {label: 'Image', value: 'img'},\r\n                    {label: 'Script', value: 'script',},\r\n                    {label: <i>Insert Custom</i>, value: 'custom'}            \r\n                    ]}\r\n                />\r\n                <InputField text={this.props.element.getContent()} onChange={this.handleTextChange}/>\r\n                <InputAddButton onAdd={this.handleAdd}/>\r\n                <InputDeleteButton onClick={this.handleDelete}/>\r\n                <InputExtrasButton onClick={this.toggleDialog}/>\r\n\r\n                <MoreElementDialog \r\n                    type={this.props.element.getType()} \r\n                    onSetAttributes={this.handleSetAttributes}\r\n                    text={this.props.element.getAttributes()}\r\n                    open={this.state.dialogOpen} \r\n                    toggleDialog={this.toggleDialog}/>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputElement;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst styles = theme => ({\r\n    fab: {\r\n        position: 'fixed',\r\n        right: theme.spacing.unit * 2,\r\n        bottom: theme.spacing.unit * 2,\r\n        margin: theme.spacing.unit,\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing.unit,\r\n    },\r\n});\r\n\r\nfunction FloatingActionButtons(props) {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <Fab color=\"secondary\" aria-label=\"Add\" className={classes.fab} onClick={() => props.onClick(1)}>\r\n            <AddIcon />\r\n        </Fab>\r\n    );\r\n}\r\n\r\nFloatingActionButtons.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(FloatingActionButtons);\r\n","/*\r\nInputlist is a dynamic list of inputElements.\r\nIt also acts as an intermediate step for populating InputElement event functions \r\nwith additional arguments before passing to App.js\r\n*/\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport InputElement from './InputComponent/InputElement'\r\nimport FloatingAddButton from '../experimental/FloatingAddButton';\r\nvar uniqid = require('uniqid');\r\n\r\nconst styles = theme => ({\r\n    list: {\r\n        overflow: 'auto',\r\n        backgroundColor: 'transparent',\r\n        paddingBottom: 60,\r\n        marginBottom: 60,\r\n    },\r\n});\r\n\r\nclass InputList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            elementArray: this.props.elementArray,\r\n        }\r\n    }\r\n\r\n    //Instructs App.js to add an input element to the array\r\n    handleAddElement = (depth, childData) => {\r\n        //console.log(depth);\r\n        this.props.handleAddElement(depth, childData);\r\n    }\r\n\r\n    //Removes an element at a given index from the list\r\n    handleRemoveElement = (index, childData) => {\r\n        //console.log('Deleting element at index ' + index);\r\n        this.props.handleRemoveElement(index, childData);\r\n    }\r\n\r\n    //Modify the contents at a given element\r\n    handleChangeElement = (e, index, childData) => {\r\n        this.props.handleChangeElement(e, index, childData);\r\n    }\r\n\r\n    //Changes the tag for a given element\r\n    handleSetType = (value, index, childData) => {\r\n        this.props.handleSetType(value, index, childData);\r\n    }\r\n\r\n    handleSetAttributes = (attr, index, childData) => {\r\n        this.props.handleSetAttributes(attr, index, childData);\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <List component=\"list\" className={classes.list} style={{ maxHeight: '100%', overflow: 'auto' }}>\r\n                    {this.renderTree(this.props.elementArray)}\r\n                    <FloatingAddButton onClick={this.handleAddElement} />\r\n                </List>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderTree(currentElements) {\r\n        //console.log(currentElements);\r\n        return (\r\n            currentElements.map((text, index) => {\r\n                return (\r\n                    <div key={uniqid()}>\r\n                        <InputElement\r\n                            key={index + ' ' + currentElements[index].getDepth()}\r\n                            index={index}\r\n                            element={currentElements[index]}\r\n                            onAdd={this.handleAddElement}\r\n                            onDelete={this.handleRemoveElement}\r\n                            onChange={this.handleChangeElement}\r\n                            onTypeSelect={this.handleSetType}\r\n                            onSetAttributes={this.handleSetAttributes}\r\n                        />\r\n                        {this.renderTree(currentElements[index].getChildren())}\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n}\r\n\r\nInputList.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(InputList);\r\n","//Elements with these type values are ignored\r\nconst noText = ['div'];\r\n\r\n//Recursively renders the text for output by printing each element and it's children, with nested formatting\r\nfunction InputTreeToHTML(elementArray) {\r\n    if (elementArray.length === 0) {\r\n        return '';\r\n    }\r\n    let output = elementArray.map((text, index) => (elementArray[index].getChildren().length === 0 ?\r\n        renderWithoutChildren(elementArray[index]) : renderWithChildren(elementArray[index])\r\n    ))\r\n    output[0] = output[0].substr(1);    //Remove first newLine\r\n    return output;\r\n    //return elementArray.map((text, index) => (renderWithChildren(elementArray[index])\r\n}\r\n\r\n//HTML elements are rendered with new line in between opening and closing markers, and children are rendered recursively\r\nfunction renderWithChildren(element) {\r\n    let content;\r\n    if (element.getContent().includes('\\n')) {\r\n        content = formatInputString(element) === '' ? '' : '\\t' + formatInputString(element).split('\\n').join('\\n\\t') + '\\n'\r\n    } else {\r\n        content = formatInputString(element) === '' ? '' : '\\t' + formatInputString(element) + '\\n'\r\n    }\r\n    //console.log(InputTreeToHTML(element.getChildren()).toString().split(',\\n').join('\\n'));\r\n    return formatTabbing('\\n' + element.getOpeningTag()\r\n        + '\\n' + content\r\n        + InputTreeToHTML(element.getChildren()).toString().split(',\\n').join('\\n')\r\n        + '\\n' + element.getClosingTag())\r\n}\r\n\r\n//HTML elements are rendered in a single line\r\nfunction renderWithoutChildren(element) {\r\n    //If the content of an element is multiline, use multiline formatting\r\n    let content;\r\n    if (element.getContent().includes('\\n')) {\r\n        content = renderWithoutChildrenMultiline(element);\r\n    } else {\r\n        content = formatInputString(element);\r\n    }\r\n    return formatTabbing('\\n'\r\n        + element.getOpeningTag()\r\n        + content\r\n        + element.getClosingTag())\r\n}\r\n\r\nfunction renderWithoutChildrenMultiline(element) {\r\n    return '\\n\\t' + (formatInputString(element).split('\\n').join('\\n\\t')) + '\\n'\r\n}\r\n//Receives an input and applies the proper tabbing\r\nfunction formatInputString(element) {\r\n    //Check if the element type is any of the types that do not display text\r\n    for (let i = 0; i < noText.length; i++) {\r\n        if (element.getType() === noText[i]) return \"\";\r\n    }\r\n    return element.getContent();\r\n}\r\nfunction formatTabbing(string, amount = 1) {\r\n    let addTab = '\\t'.repeat(amount);\r\n    return string.split('\\n').join('\\n' + addTab);\r\n}\r\nexport default InputTreeToHTML;","/*\r\nTextToHTML.js encodes the input tree as HTML using the InputTreeToHTML.js utility\r\n*/\r\n\r\nimport React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport InputTreeToHTML from '../../util/InputTreeToHTML'\r\nconst styles = theme => ({\r\n    userInput: {\r\n        background: '#eeeeee'\r\n    }\r\n});\r\n\r\nclass TextToOutput extends React.Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        let startTemplate = '<!doctype html>\\n<html lang=\"en\">\\n<head>\\n\\t<meta charset=\"utf-8\">\\n\\t<title>TextToHTML</title>\\n\\t<meta name=\"description\" content=\"Description placeholder\">\\n\\t<meta name=\"author\" content=\"TextToHTML\">\\n\\t<link rel=\"stylesheet\" href=\"css/styles.css?v=1.0\">\\n</head>\\n<body>'\r\n        let endTemplate = '</body>\\n</html>'\r\n        return (\r\n            <div>\r\n                {startTemplate}\r\n                <div className={classes.userInput}>\r\n                    {InputTreeToHTML(this.props.elementArray)}\r\n                </div>\r\n                {endTemplate}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(TextToOutput);","/*\r\nOutput.js is the frame for displaying the output code\r\n*/\r\n\r\nimport React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextToHTML from './TextToHTML';\r\nimport { Paper } from '@material-ui/core';\r\n/*\r\nimport ContainedButton from './ContainedButton';\r\nimport FormButton from './FormButton';\r\n*/\r\nconst styles = theme => ({\r\n\r\n    output: {\r\n        padding: '5%',\r\n        paddingTop: '1.5%'\r\n    },\r\n    header: {\r\n        marginBottom: 4,\r\n    },\r\n    hr: {\r\n        marginBottom: 12,\r\n    },\r\n    code: {\r\n        color: '#333333',\r\n        fontSize: 14,\r\n        lineHeight: 1.2,\r\n        tabSize: 3,\r\n    },\r\n    userInput: {\r\n        background: '#eeeeee'\r\n    }\r\n});\r\n\r\nclass Output extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    toHtml(string, type, parent) {\r\n        const output = document.createElement(type);\r\n        output.innerHTML = string;\r\n        document.body.insertBefore(output, parent);\r\n        console.log(output);\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            /*\r\n            <div class='outputRoot'>\r\n            { () => this.toHtml('test', 'paragraph', document.head.firstElementChild) }\r\n            </div>\r\n           <pre class=\"prettyprint\">\r\n\r\n           </pre>\r\n           */\r\n            <div>\r\n                {/*}\r\n                <ContainedButton label='Preview'/>\r\n                <FormButton label='Download' />\r\n                */}\r\n                <Paper className={classes.output}>\r\n                    <pre>\r\n                            <h2 className={classes.header}>Output:</h2>\r\n                            <hr className={classes.hr} />\r\n                            <div className={classes.code}>\r\n                                <TextToHTML elementArray={this.props.elementArray} />\r\n                            </div>\r\n                    </pre>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Output);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menubar: {\r\n    paddingTop: 13,\r\n    paddingBottom: 13,\r\n    paddingLeft: 20,\r\n  }\r\n};\r\n\r\nfunction MenuBar(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={classes.menubar} position=\"static\">\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n            Text to HTML\r\n          </Typography>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nMenuBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MenuBar);\r\n","class HTMLElement {\r\n    constructor(depth, parent) {\r\n        this.depth = depth;\r\n        this.type = 'p';\r\n        this.content = '';\r\n        this.children = new Array(0);\r\n        this.parent = parent;\r\n        this.attributes = '';\r\n    }\r\n    setDepth(depth) {\r\n        this.depth = depth;\r\n    }\r\n    setType(type) {\r\n        this.type = type;\r\n    }\r\n    setContent(content) {\r\n        this.content = content;\r\n    }\r\n    setAttributes(string) {\r\n        this.attributes = string;\r\n    }\r\n    addChild() {\r\n        this.children.push(new HTMLElement(this.depth + 1, this));\r\n    }\r\n    removeChild(index) {\r\n        this.children.splice(index, 1);\r\n    }\r\n    getParent() {\r\n        return this.parent;\r\n    }\r\n    getType() {\r\n        return this.type;\r\n    }\r\n    getContent() {\r\n        return this.content;\r\n    }\r\n    getChildren() {\r\n        return this.children;\r\n    }\r\n    getChild(index) {\r\n        return this.children[index];\r\n    }\r\n    getDepth() {\r\n        return this.depth;\r\n    }\r\n    getOpeningTag() {\r\n        if (this.type === 'custom') {\r\n            return '';\r\n        } \r\n        return '<' + this.type \r\n        + (this.attributes === '' ? '' : (' ' + this.attributes)) + '>';\r\n    }\r\n    getClosingTag() {\r\n        if (this.type === 'custom') {\r\n            return '';\r\n        } \r\n        return '</' + this.type + '>';\r\n    }\r\n    getAttributes() {\r\n        return this.attributes;\r\n    }\r\n}\r\n\r\nexport default HTMLElement;","/*\r\nApp contains the logic for handling user input data and stores it as a tree.\r\nIt passes this data to both input and output components to be rendered\r\n*/\r\n\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport InputList from './Input/InputList'\r\nimport Output from './Output/Output'\r\nimport AppBar from './MenuBar'\r\nimport HTMLElement from '../models/HTMLElement'\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        height: '100%',\r\n        width: '100%',\r\n        overflow: 'hidden',\r\n    },\r\n    input: {\r\n        overflow: 'auto',\r\n        position: 'fixed',\r\n        right: '0%',\r\n        height: '87%',\r\n        width: '46%',\r\n        marginTop: '2%',\r\n    },\r\n    output: {\r\n        height: '78%',\r\n        overflow: 'auto',\r\n        position: 'fixed',\r\n        left: 0,\r\n        width: '49%',\r\n        marginTop: '2%',\r\n        padding: '2%',\r\n    }\r\n})\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: true,\r\n            elementArray: [new HTMLElement(1)],\r\n        };\r\n        this.handleAddElement = this.handleAddElement.bind(this);\r\n        this.handleRemoveElement = this.handleRemoveElement.bind(this);\r\n        this.handleChangeElement = this.handleChangeElement.bind(this);\r\n        this.handleSetType = this.handleSetType.bind(this);\r\n        this.handleSetAttributes = this.handleSetAttributes.bind(this);\r\n    }\r\n\r\n    //Adds an input element to the array\r\n    handleAddElement(depth, childData) {\r\n        if (childData !== undefined) {\r\n            //console.log(childData.parent);\r\n            childData.parent.addChild();\r\n            this.forceUpdate();\r\n            return;\r\n        }\r\n        //console.log(this.state.elementArray);\r\n        this.setState(prevState => ({\r\n            elementArray: prevState.elementArray.concat(new HTMLElement(depth)),\r\n        }))\r\n    }\r\n\r\n    //Removes an element at a given index from the list\r\n    handleRemoveElement(index, childData) {\r\n        if (childData.parent !== undefined) {\r\n            //console.log(childData.parent);\r\n            childData.parent.removeChild(index);\r\n            this.forceUpdate();\r\n            return;\r\n        }\r\n        //console.log('Deleting element at index ' + index);\r\n        this.setState(prevState => ({\r\n            elementArray: prevState.elementArray.slice(0, index).concat(prevState.elementArray.slice(index + 1))\r\n        }))\r\n    }\r\n\r\n    //Modify the contents at a given element\r\n    handleChangeElement(e, index, childData) {\r\n        if (childData !== undefined && childData.parent !== undefined) {\r\n            //console.log(childData.parent);\r\n            childData.parent.getChild(index).setContent(e.target.value);\r\n            this.forceUpdate();\r\n            return;\r\n        }\r\n        let stateCopy = Object.assign({}, this.state);\r\n        stateCopy.elementArray = stateCopy.elementArray.slice();\r\n        Object.assign({}, stateCopy.elementArray[index]);\r\n        stateCopy.elementArray[index].setContent(e.target.value);\r\n        this.setState(stateCopy);\r\n    }\r\n\r\n    //Changes the tag for a given element\r\n    handleSetType(value, index, childData) {\r\n        if (childData !== undefined && childData.parent !== undefined) {\r\n            //console.log(childData.parent);\r\n            childData.parent.getChild(index).setType(value);\r\n            this.forceUpdate();\r\n            return;\r\n        }\r\n        let stateCopy = Object.assign({}, this.state);\r\n        stateCopy.elementArray = stateCopy.elementArray.slice();\r\n        Object.assign({}, stateCopy.elementArray[index]);\r\n        stateCopy.elementArray[index].setType(value);\r\n        //console.log(index + \" : \" + stateCopy.elementArray[index].type);\r\n        this.setState(stateCopy);\r\n    }\r\n    handleSetAttributes(attr, index, childData) {\r\n        if (childData !== undefined && childData.parent !== undefined) {\r\n            //console.log(childData.parent);\r\n            childData.parent.getChild(index).setAttributes(attr);\r\n            this.forceUpdate();\r\n            return;\r\n        }\r\n        let stateCopy = Object.assign({}, this.state);\r\n        stateCopy.elementArray = stateCopy.elementArray.slice();\r\n        Object.assign({}, stateCopy.elementArray[index]);\r\n        stateCopy.elementArray[index].setAttributes(attr);\r\n        //console.log(index + \" : \" + stateCopy.elementArray[index].type);\r\n        this.setState(stateCopy);\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className='container'>\r\n                <AppBar />\r\n                <div className={classes.output}>\r\n                    <Output elementArray={this.state.elementArray} />\r\n                </div>\r\n                <div className={classes.input}>\r\n                    <InputList\r\n                        elementArray={this.state.elementArray}\r\n                        handleAddElement={this.handleAddElement}\r\n                        handleChangeElement={this.handleChangeElement}\r\n                        handleRemoveElement={this.handleRemoveElement}\r\n                        handleSetType={this.handleSetType}\r\n                        handleSetAttributes={this.handleSetAttributes}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nApp.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(App);","import React from 'react';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport App from './App';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: blue,\r\n    secondary: blue,\r\n  },\r\n  typography: { useNextVariants: true },\r\n});\r\n\r\nfunction Palette() {\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <App></App>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Palette;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AppPreloader from './components/AppPreloader'\r\n\r\nReactDOM.render(\r\n    <AppPreloader />, document.getElementById('root')\r\n);"],"sourceRoot":""}